{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nseng\\\\Desktop\\\\react\\\\MasterBurgerBuilder\\\\Build-Burger-Online\\\\src\\\\Layout\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from './Burger/Burger';\nimport BurgerControls from './BurgerControls/BurgerControls';\nimport Message from './BurgerControls/Messages/Message';\nimport closeItem from '../Assets/images/icon.png';\nimport classes from './BurgerBuilder.module.css';\nimport Summary from '../Summary/Summary';\nimport OrderNow from './OrderNow/OrderNow';\nimport BackOrder from './BackOrder/BackOrder';\nimport instance from '../../axios-orders';\nimport Spinner from './Spinner/Spinner';\nimport ErrorHandler from './ErrorHandler/ErrorHandler';\nimport axios from 'axios';\nconst ingredientPrices = {\n  salad: 0.7,\n  meat: 0.9,\n  bacon: 1,\n  cheese: 0.8\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      Message: false,\n      MessageText: \"\",\n      NoIngridient: true,\n      cantRemove: true,\n      Price: 4,\n      Purchasable: true,\n      OrderNow: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = igKey => {\n      const ingredientsCopy = { ...this.state.ingredients\n      };\n\n      if (ingredientsCopy[igKey] < 2) {\n        ingredientsCopy[igKey] += 1;\n        const oldPrice = this.state.Price;\n        const sumIngredients = oldPrice + ingredientPrices[igKey];\n        this.setState({\n          Price: sumIngredients\n        });\n        this.youCanCheckOut(ingredientsCopy);\n      } else {\n        this.setState({\n          Message: true,\n          MessageText: \"You Can Only Add 2 \" + igKey + \" Only \"\n        });\n      }\n\n      this.setState({\n        ingredients: ingredientsCopy\n      });\n      const newIngredsValues = Object.values({ ...ingredientsCopy\n      });\n      console.log(newIngredsValues);\n      const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(newIngredsLength);\n\n      if (newIngredsLength !== 0) {\n        this.setState({\n          NoIngridient: false\n        });\n      }\n    };\n\n    this.removeIngredientHandler = igKey => {\n      const ingredientsCopy = { ...this.state.ingredients\n      };\n\n      if (ingredientsCopy[igKey] > 0) {\n        ingredientsCopy[igKey] -= 1;\n        const oldPrice = this.state.Price;\n        const sumIngredients = oldPrice - ingredientPrices[igKey];\n        this.setState({\n          Price: sumIngredients\n        });\n        this.youCanCheckOut(ingredientsCopy);\n      } else {\n        this.setState({\n          Message: true,\n          MessageText: \"No  \" + igKey + \" To Remove \"\n        });\n      }\n\n      this.setState({\n        ingredients: ingredientsCopy\n      });\n      const newIngredsValues = Object.values({ ...ingredientsCopy\n      });\n      console.log(newIngredsValues);\n      const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(newIngredsLength);\n\n      if (newIngredsLength !== 0) {\n        this.setState({\n          NoIngridient: false\n        });\n        console.log(this.state.NoIngridient);\n      } else {\n        this.setState({\n          NoIngridient: true,\n          Purchasable: true\n        });\n        console.log(this.state.Purchasable);\n      }\n    };\n\n    this.ToggleMessage = () => {\n      this.setState({\n        Message: false\n      });\n    };\n\n    this.OrderNowHandler = () => {\n      this.setState({\n        OrderNow: true\n      });\n      console.log(\"OrderNowHandler\" + this.state.OrderNow);\n    };\n\n    this.CloseBackOrder = () => {\n      this.setState({\n        OrderNow: false\n      });\n    };\n\n    this.sentOrder = () => {\n      this.setState({\n        loading: true\n      });\n      const orderPost = {\n        ingredients: this.state.ingredients,\n        price: this.state.Price,\n        customer: {\n          name: 'bonheur jed',\n          address: {\n            street: 'Street1',\n            postalcode: 'H4L1P5',\n            country: 'Canada'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'Fastest'\n      };\n      instance.post('/orders.json', orderPost).then(response => {\n        this.setState({\n          loading: false,\n          OrderNow: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          OrderNow: false\n        });\n      });\n    };\n\n    this.showSummary = props => {\n      if (this.state.OrderNow) {\n        if (this.state.loading) {\n          return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Summary, {\n              listoforder: this.state.ingredients,\n              SummaryPrice: this.state.Price.toFixed(2),\n              CancelOrder: this.CloseBackOrder,\n              sentOrder: this.sentOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(BackOrder, {\n              toclose: this.CloseBackOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true);\n        }\n      }\n    };\n\n    this.youCanCheckOut = ingredients => {\n      const newIngredsValues = Object.values(ingredients);\n      console.log(newIngredsValues);\n      const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(\"newIngredsLength\" + newIngredsLength);\n\n      if (newIngredsLength !== 0) {\n        this.setState({\n          Purchasable: false\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://react-my-burger-228f1-default-rtdb.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    });\n  } // ________functions___________\n\n\n  // ____end________\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.showSummary(), /*#__PURE__*/_jsxDEV(Burger, {\n        burgerIngredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.BurgerContols,\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          messageEmpty: this.state.Message,\n          children: [this.state.MessageText, /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: this.ToggleMessage,\n            className: classes.Icon,\n            src: closeItem,\n            alt: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.TotalPrice,\n          children: [\"Total: \", this.state.Price.toFixed(2), \"$ \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BurgerControls, {\n          removeIngredient: this.removeIngredientHandler,\n          addIngredient: this.addIngredientHandler,\n          disable: this.state.Message,\n          zeroIngredient: this.state.NoIngridient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderNow, {\n          goCheckout: this.state.Purchasable,\n          checkoutNow: this.OrderNowHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = ErrorHandler(BurgerBuilder, instance);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/nseng/Desktop/react/MasterBurgerBuilder/Build-Burger-Online/src/Layout/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BurgerControls","Message","closeItem","classes","Summary","OrderNow","BackOrder","instance","Spinner","ErrorHandler","axios","ingredientPrices","salad","meat","bacon","cheese","BurgerBuilder","state","ingredients","MessageText","NoIngridient","cantRemove","Price","Purchasable","loading","addIngredientHandler","igKey","ingredientsCopy","oldPrice","sumIngredients","setState","youCanCheckOut","newIngredsValues","Object","values","console","log","newIngredsLength","reduce","total","currentValue","removeIngredientHandler","ToggleMessage","OrderNowHandler","CloseBackOrder","sentOrder","orderPost","price","customer","name","address","street","postalcode","country","email","deliveryMethod","post","then","response","catch","error","showSummary","props","toFixed","componentDidMount","get","data","render","BurgerContols","Icon","TotalPrice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,GADgB;AAEvBC,EAAAA,IAAI,EAAE,GAFiB;AAGvBC,EAAAA,KAAK,EAAE,CAHgB;AAIvBC,EAAAA,MAAM,EAAE;AAJe,CAAzB;;AAMA,MAAMC,aAAN,SAA4BlB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCmB,KADoC,GAC5B;AACNC,MAAAA,WAAW,EAAE,IADP;AAENjB,MAAAA,OAAO,EAAE,KAFH;AAGNkB,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,YAAY,EAAE,IAJR;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,KAAK,EAAE,CAND;AAONC,MAAAA,WAAW,EAAE,IAPP;AAQNlB,MAAAA,QAAQ,EAAE,KARJ;AASNmB,MAAAA,OAAO,EAAE;AATH,KAD4B;;AAAA,SAoBpCC,oBApBoC,GAoBZC,KAAD,IAAW;AAChC,YAAMC,eAAe,GAAG,EAAE,GAAG,KAAKV,KAAL,CAAWC;AAAhB,OAAxB;;AACA,UAAIS,eAAe,CAACD,KAAD,CAAf,GAAyB,CAA7B,EAAgC;AAC9BC,QAAAA,eAAe,CAACD,KAAD,CAAf,IAA0B,CAA1B;AACA,cAAME,QAAQ,GAAG,KAAKX,KAAL,CAAWK,KAA5B;AACA,cAAMO,cAAc,GAAGD,QAAQ,GAAGjB,gBAAgB,CAACe,KAAD,CAAlD;AACA,aAAKI,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEO;AAAT,SAAd;AACA,aAAKE,cAAL,CAAoBJ,eAApB;AAED,OAPD,MAOO;AACL,aAAKG,QAAL,CACE;AACE7B,UAAAA,OAAO,EAAE,IADX;AAEEkB,UAAAA,WAAW,EAAE,wBAAwBO,KAAxB,GAAgC;AAF/C,SADF;AAOD;;AACD,WAAKI,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAES;AAAf,OAAd;AACA,YAAMK,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAE,GAAGP;AAAL,OAAd,CAAzB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,YAAMK,gBAAgB,GAAGL,gBAAgB,CAACM,MAAjB,CAAwB,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACxE,eAAOD,KAAK,GAAGC,YAAf;AACD,OAFwB,EAEtB,CAFsB,CAAzB;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;;AACA,UAAIA,gBAAgB,KAAK,CAAzB,EAA4B;AAC1B,aAAKP,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACD;AACF,KAhDmC;;AAAA,SAoDpCqB,uBApDoC,GAoDTf,KAAD,IAAW;AACnC,YAAMC,eAAe,GAAG,EAAE,GAAG,KAAKV,KAAL,CAAWC;AAAhB,OAAxB;;AACA,UAAIS,eAAe,CAACD,KAAD,CAAf,GAAyB,CAA7B,EAAgC;AAC9BC,QAAAA,eAAe,CAACD,KAAD,CAAf,IAA0B,CAA1B;AACA,cAAME,QAAQ,GAAG,KAAKX,KAAL,CAAWK,KAA5B;AACA,cAAMO,cAAc,GAAGD,QAAQ,GAAGjB,gBAAgB,CAACe,KAAD,CAAlD;AACA,aAAKI,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAEO;AAAT,SAAd;AACA,aAAKE,cAAL,CAAoBJ,eAApB;AACD,OAND,MAMO;AACL,aAAKG,QAAL,CACE;AACE7B,UAAAA,OAAO,EAAE,IADX;AAEEkB,UAAAA,WAAW,EAAE,SAASO,KAAT,GAAiB;AAFhC,SADF;AAMD;;AAED,WAAKI,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAES;AAAf,OAAd;AACA,YAAMK,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAE,GAAGP;AAAL,OAAd,CAAzB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,YAAMK,gBAAgB,GAAGL,gBAAgB,CAACM,MAAjB,CAAwB,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACxE,eAAOD,KAAK,GAAGC,YAAf;AACD,OAFwB,EAEtB,CAFsB,CAAzB;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;;AACA,UAAIA,gBAAgB,KAAK,CAAzB,EAA4B;AAC1B,aAAKP,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACAe,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWG,YAAvB;AACD,OAHD,MAGO;AACL,aAAKU,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAE,IAAhB;AAAsBG,UAAAA,WAAW,EAAE;AAAnC,SAAd;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWM,WAAvB;AACD;AACF,KAnFmC;;AAAA,SAuFpCmB,aAvFoC,GAuFpB,MAAM;AACpB,WAAKZ,QAAL,CAAc;AAAE7B,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAzFmC;;AAAA,SA6FpC0C,eA7FoC,GA6FlB,MAAM;AACtB,WAAKb,QAAL,CAAc;AAAEzB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA8B,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,KAAKnB,KAAL,CAAWZ,QAA3C;AACD,KAhGmC;;AAAA,SAoGpCuC,cApGoC,GAoGnB,MAAM;AACrB,WAAKd,QAAL,CAAc;AAAEzB,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAtGmC;;AAAA,SA0GpCwC,SA1GoC,GA0GxB,MAAM;AAChB,WAAKf,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMsB,SAAS,GAAG;AAChB5B,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADR;AAEhB6B,QAAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWK,KAFF;AAGhB0B,QAAAA,QAAQ,EAAE;AACRC,UAAAA,IAAI,EAAE,aADE;AAERC,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,SADD;AAEPC,YAAAA,UAAU,EAAE,QAFL;AAGPC,YAAAA,OAAO,EAAE;AAHF,WAFD;AAORC,UAAAA,KAAK,EAAE;AAPC,SAHM;AAYhBC,QAAAA,cAAc,EAAE;AAZA,OAAlB;AAcAhD,MAAAA,QAAQ,CAACiD,IAAT,CAAc,cAAd,EAA8BV,SAA9B,EACGW,IADH,CACQC,QAAQ,IAAI;AAChB,aAAK5B,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE,KAAX;AAAkBnB,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OAHH,EAIGsD,KAJH,CAISC,KAAK,IAAI;AACd,aAAK9B,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE,KAAX;AAAkBnB,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OANH;AAOD,KAjImC;;AAAA,SAqIpCwD,WArIoC,GAqIrBC,KAAD,IAAW;AACvB,UAAI,KAAK7C,KAAL,CAAWZ,QAAf,EAAyB;AACvB,YAAI,KAAKY,KAAL,CAAWO,OAAf,EAAwB;AACtB,8BAAQ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAAR;AACD,SAFD,MAEO;AACL,8BACE;AAAA,oCACE,QAAC,OAAD;AACE,cAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,WAD1B;AAEE,cAAA,YAAY,EAAE,KAAKD,KAAL,CAAWK,KAAX,CAAiByC,OAAjB,CAAyB,CAAzB,CAFhB;AAGE,cAAA,WAAW,EAAE,KAAKnB,cAHpB;AAIE,cAAA,SAAS,EAAE,KAAKC;AAJlB;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAE,KAAKD;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,0BADF;AAWD;AAEF;AACF,KAxJmC;;AAAA,SA4JpCb,cA5JoC,GA4JlBb,WAAD,IAAiB;AAChC,YAAMc,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAchB,WAAd,CAAzB;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,YAAMK,gBAAgB,GAAGL,gBAAgB,CAACM,MAAjB,CAAwB,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACxE,eAAOD,KAAK,GAAGC,YAAf;AACD,OAFwB,EAEtB,CAFsB,CAAzB;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,gBAAjC;;AACA,UAAIA,gBAAgB,KAAK,CAAzB,EAA4B;AAC1B,aAAKP,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAE;AAAf,SAAd;AACD;AACF,KAtKmC;AAAA;;AAapCyC,EAAAA,iBAAiB,GAAG;AAClBtD,IAAAA,KAAK,CAACuD,GAAN,CAAU,4EAAV,EACGR,IADH,CACQC,QAAQ,IAAI;AAChB,WAAK5B,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAEwC,QAAQ,CAACQ;AAAxB,OAAd;AACD,KAHH;AAID,GAlBmC,CAmBpC;;;AAqJA;AAIAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKN,WAAL,EADH,eAGE,QAAC,MAAD;AAAQ,QAAA,iBAAiB,EAAE,KAAK5C,KAAL,CAAWC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,SAAS,EAAEf,OAAO,CAACiE,aAAxB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,YAAY,EAAE,KAAKnD,KAAL,CAAWhB,OAAlC;AAAA,qBACG,KAAKgB,KAAL,CAAWE,WADd,eAEE;AAAK,YAAA,OAAO,EAAE,KAAKuB,aAAnB;AAAkC,YAAA,SAAS,EAAEvC,OAAO,CAACkE,IAArD;AAA2D,YAAA,GAAG,EAAEnE,SAAhE;AAA2E,YAAA,GAAG,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAEC,OAAO,CAACmE,UAAxB;AAAA,gCAA6C,KAAKrD,KAAL,CAAWK,KAAX,CAAiByC,OAAjB,CAAyB,CAAzB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,cAAD;AACE,UAAA,gBAAgB,EAAE,KAAKtB,uBADzB;AAEE,UAAA,aAAa,EAAE,KAAKhB,oBAFtB;AAGE,UAAA,OAAO,EAAE,KAAKR,KAAL,CAAWhB,OAHtB;AAIE,UAAA,cAAc,EAAE,KAAKgB,KAAL,CAAWG;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBANF,eAYE,QAAC,QAAD;AAAU,UAAA,UAAU,EAAE,KAAKH,KAAL,CAAWM,WAAjC;AAA8C,UAAA,WAAW,EAAE,KAAKoB;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAsBD;;AAnMmC;;AAsMtC,oBAAelC,YAAY,CAACO,aAAD,EAAgBT,QAAhB,CAA3B","sourcesContent":["import React, { Component } from 'react';\r\nimport Burger from './Burger/Burger';\r\nimport BurgerControls from './BurgerControls/BurgerControls';\r\nimport Message from './BurgerControls/Messages/Message';\r\nimport closeItem from '../Assets/images/icon.png'\r\nimport classes from './BurgerBuilder.module.css';\r\nimport Summary from '../Summary/Summary';\r\nimport OrderNow from './OrderNow/OrderNow';\r\nimport BackOrder from './BackOrder/BackOrder';\r\nimport instance from '../../axios-orders';\r\nimport Spinner from './Spinner/Spinner';\r\nimport ErrorHandler from './ErrorHandler/ErrorHandler';\r\nimport axios from 'axios';\r\nconst ingredientPrices = {\r\n  salad: 0.7,\r\n  meat: 0.9,\r\n  bacon: 1,\r\n  cheese: 0.8\r\n}\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: null,\r\n    Message: false,\r\n    MessageText: \"\",\r\n    NoIngridient: true,\r\n    cantRemove: true,\r\n    Price: 4,\r\n    Purchasable: true,\r\n    OrderNow: false,\r\n    loading: false,\r\n\r\n  }\r\n  componentDidMount() {\r\n    axios.get('https://react-my-burger-228f1-default-rtdb.firebaseio.com/ingredients.json')\r\n      .then(response => {\r\n        this.setState({ ingredients: response.data })\r\n      })\r\n  }\r\n  // ________functions___________\r\n  addIngredientHandler = (igKey) => {\r\n    const ingredientsCopy = { ...this.state.ingredients };\r\n    if (ingredientsCopy[igKey] < 2) {\r\n      ingredientsCopy[igKey] += 1;\r\n      const oldPrice = this.state.Price;\r\n      const sumIngredients = oldPrice + ingredientPrices[igKey];\r\n      this.setState({ Price: sumIngredients, });\r\n      this.youCanCheckOut(ingredientsCopy);\r\n\r\n    } else {\r\n      this.setState(\r\n        {\r\n          Message: true,\r\n          MessageText: \"You Can Only Add 2 \" + igKey + \" Only \",\r\n\r\n        }\r\n      );\r\n    }\r\n    this.setState({ ingredients: ingredientsCopy });\r\n    const newIngredsValues = Object.values({ ...ingredientsCopy });\r\n    console.log(newIngredsValues);\r\n    const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n      return total + currentValue;\r\n    }, 0);\r\n    console.log(newIngredsLength);\r\n    if (newIngredsLength !== 0) {\r\n      this.setState({ NoIngridient: false });\r\n    }\r\n  }\r\n\r\n  // ____end________\r\n\r\n  removeIngredientHandler = (igKey) => {\r\n    const ingredientsCopy = { ...this.state.ingredients };\r\n    if (ingredientsCopy[igKey] > 0) {\r\n      ingredientsCopy[igKey] -= 1;\r\n      const oldPrice = this.state.Price;\r\n      const sumIngredients = oldPrice - ingredientPrices[igKey];\r\n      this.setState({ Price: sumIngredients });\r\n      this.youCanCheckOut(ingredientsCopy);\r\n    } else {\r\n      this.setState(\r\n        {\r\n          Message: true,\r\n          MessageText: \"No  \" + igKey + \" To Remove \",\r\n        }\r\n      );\r\n    }\r\n\r\n    this.setState({ ingredients: ingredientsCopy });\r\n    const newIngredsValues = Object.values({ ...ingredientsCopy });\r\n    console.log(newIngredsValues);\r\n    const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n      return total + currentValue;\r\n    }, 0);\r\n    console.log(newIngredsLength);\r\n    if (newIngredsLength !== 0) {\r\n      this.setState({ NoIngridient: false });\r\n      console.log(this.state.NoIngridient)\r\n    } else {\r\n      this.setState({ NoIngridient: true, Purchasable: true });\r\n      console.log(this.state.Purchasable)\r\n    }\r\n  }\r\n\r\n  // ____end________\r\n\r\n  ToggleMessage = () => {\r\n    this.setState({ Message: false })\r\n  }\r\n\r\n  // ____end________\r\n\r\n  OrderNowHandler = () => {\r\n    this.setState({ OrderNow: true });\r\n    console.log(\"OrderNowHandler\" + this.state.OrderNow);\r\n  }\r\n\r\n  // ____end________\r\n\r\n  CloseBackOrder = () => {\r\n    this.setState({ OrderNow: false })\r\n  }\r\n\r\n  // ____end________\r\n\r\n  sentOrder = () => {\r\n    this.setState({ loading: true })\r\n    const orderPost = {\r\n      ingredients: this.state.ingredients,\r\n      price: this.state.Price,\r\n      customer: {\r\n        name: 'bonheur jed',\r\n        address: {\r\n          street: 'Street1',\r\n          postalcode: 'H4L1P5',\r\n          country: 'Canada'\r\n        },\r\n        email: 'test@test.com'\r\n      },\r\n      deliveryMethod: 'Fastest'\r\n    }\r\n    instance.post('/orders.json', orderPost)\r\n      .then(response => {\r\n        this.setState({ loading: false, OrderNow: false });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ loading: false, OrderNow: false })\r\n      });\r\n  }\r\n\r\n  // ____end________\r\n\r\n  showSummary = (props) => {\r\n    if (this.state.OrderNow) {\r\n      if (this.state.loading) {\r\n        return (<Spinner />)\r\n      } else {\r\n        return (\r\n          <>\r\n            <Summary\r\n              listoforder={this.state.ingredients}\r\n              SummaryPrice={this.state.Price.toFixed(2)}\r\n              CancelOrder={this.CloseBackOrder}\r\n              sentOrder={this.sentOrder}\r\n            />\r\n            <BackOrder toclose={this.CloseBackOrder} />\r\n          </>\r\n        )\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  // ____end________\r\n\r\n  youCanCheckOut = (ingredients) => {\r\n    const newIngredsValues = Object.values(ingredients);\r\n    console.log(newIngredsValues);\r\n    const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n      return total + currentValue;\r\n    }, 0);\r\n    console.log(\"newIngredsLength\" + newIngredsLength)\r\n    if (newIngredsLength !== 0) {\r\n      this.setState({ Purchasable: false });\r\n    }\r\n  }\r\n\r\n  // ____end________\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.showSummary()}\r\n\r\n        <Burger burgerIngredients={this.state.ingredients} />\r\n        <div className={classes.BurgerContols}>\r\n          <Message messageEmpty={this.state.Message}>\r\n            {this.state.MessageText}\r\n            <img onClick={this.ToggleMessage} className={classes.Icon} src={closeItem} alt=\"close\" />\r\n          </Message>\r\n          <div className={classes.TotalPrice}>Total: {(this.state.Price.toFixed(2))}$ </div>\r\n          <BurgerControls\r\n            removeIngredient={this.removeIngredientHandler}\r\n            addIngredient={this.addIngredientHandler}\r\n            disable={this.state.Message}\r\n            zeroIngredient={this.state.NoIngridient}\r\n          />\r\n          <OrderNow goCheckout={this.state.Purchasable} checkoutNow={this.OrderNowHandler} />\r\n\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ErrorHandler(BurgerBuilder, instance);"]},"metadata":{},"sourceType":"module"}