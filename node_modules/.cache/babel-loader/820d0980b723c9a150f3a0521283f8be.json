{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nseng\\\\Desktop\\\\MasterBurgerBuilder\\\\Build-Burger-Online\\\\src\\\\Layout\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from './Burger/Burger';\nimport BurgerControls from './BurgerControls/BurgerControls';\nimport Message from './BurgerControls/Messages/Message';\nimport closeItem from '../Assets/images/icon.png';\nimport classes from './BurgerBuilder.module.css';\nimport Summary from '../Summary/Summary';\nimport OrderNow from './OrderNow/OrderNow';\nimport BackOrder from './BackOrder/BackOrder';\nimport axios from '../../axios-orders';\nconst ingredientPrices = {\n  salad: 0.7,\n  meat: 0.9,\n  bacon: 1,\n  cheese: 0.8\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        meat: 0,\n        bacon: 0,\n        cheese: 0\n      },\n      Message: false,\n      MessageText: \"\",\n      NoIngridient: true,\n      cantRemove: true,\n      Price: 4,\n      Purchasable: true,\n      OrderNow: false\n    };\n\n    this.addIngredientHandler = igKey => {\n      const ingredientsCopy = { ...this.state.ingredients\n      };\n\n      if (ingredientsCopy[igKey] < 2) {\n        ingredientsCopy[igKey] += 1;\n        const oldPrice = this.state.Price;\n        const sumIngredients = oldPrice + ingredientPrices[igKey];\n        this.setState({\n          Price: sumIngredients\n        });\n        this.youCanCheckOut(ingredientsCopy);\n      } else {\n        this.setState({\n          Message: true,\n          MessageText: \"You Can Only Add 2 \" + igKey + \" Only \"\n        });\n      }\n\n      this.setState({\n        ingredients: ingredientsCopy\n      });\n      const newIngredsValues = Object.values({ ...ingredientsCopy\n      });\n      console.log(newIngredsValues);\n      const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(newIngredsLength);\n\n      if (newIngredsLength !== 0) {\n        this.setState({\n          NoIngridient: false\n        });\n      }\n    };\n\n    this.removeIngredientHandler = igKey => {\n      const ingredientsCopy = { ...this.state.ingredients\n      };\n\n      if (ingredientsCopy[igKey] > 0) {\n        ingredientsCopy[igKey] -= 1;\n        const oldPrice = this.state.Price;\n        const sumIngredients = oldPrice - ingredientPrices[igKey];\n        this.setState({\n          Price: sumIngredients\n        });\n        this.youCanCheckOut(ingredientsCopy);\n      } else {\n        this.setState({\n          Message: true,\n          MessageText: \"No  \" + igKey + \" To Remove \"\n        });\n      }\n\n      this.setState({\n        ingredients: ingredientsCopy\n      });\n      const newIngredsValues = Object.values({ ...ingredientsCopy\n      });\n      console.log(newIngredsValues);\n      const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(newIngredsLength);\n\n      if (newIngredsLength !== 0) {\n        this.setState({\n          NoIngridient: false\n        });\n        console.log(this.state.NoIngridient);\n      } else {\n        this.setState({\n          NoIngridient: true,\n          Purchasable: true\n        });\n        console.log(this.state.Purchasable);\n      }\n    };\n\n    this.ToggleMessage = () => {\n      this.setState({\n        Message: false\n      });\n    };\n\n    this.OrderNowHandler = () => {\n      this.setState({\n        OrderNow: true\n      });\n      console.log(\"OrderNowHandler\" + this.state.OrderNow);\n    };\n\n    this.CloseBackOrder = () => {\n      this.setState({\n        OrderNow: false\n      });\n    };\n\n    this.sentOrder = () => {\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.Price,\n        customer: {\n          name: 'bonheur jed',\n          address: {\n            street: 'Street1',\n            postalcode: 'H4L1P5',\n            country: 'Canada'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'Fastest'\n      };\n      axios.post('/orders.json', order);\n    };\n\n    this.showSummary = props => {\n      if (this.state.OrderNow) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Summary, {\n            listoforder: this.state.ingredients,\n            SummaryPrice: this.state.Price.toFixed(2),\n            CancelOrder: this.CloseBackOrder,\n            sentOrder: this.sentOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(BackOrder, {\n            toclose: this.CloseBackOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true);\n      }\n    };\n\n    this.youCanCheckOut = ingredients => {\n      const newIngredsValues = Object.values(ingredients);\n      console.log(newIngredsValues);\n      const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n        return total + currentValue;\n      }, 0);\n      console.log(\"newIngredsLength\" + newIngredsLength);\n\n      if (newIngredsLength !== 0) {\n        this.setState({\n          Purchasable: false\n        });\n      }\n    };\n  }\n\n  // PurchasableHandler = () => {\n  //  const newIngredsValues = Object.values({ ...this.state.ingredients });\n  //  console.log(newIngredsValues);\n  //  const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\n  //   return total + currentValue;\n  //  }, 0);\n  //  if (newIngredsLength === 0) {\n  //   this.setState({ Purchasable: true });\n  //  }\n  // }\n  // ________end_functions___________\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.showSummary(), /*#__PURE__*/_jsxDEV(Burger, {\n        burgerIngredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.BurgerContols,\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          messageEmpty: this.state.Message,\n          children: [this.state.MessageText, /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: this.ToggleMessage,\n            className: classes.Icon,\n            src: closeItem,\n            alt: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.TotalPrice,\n          children: [\"Total: \", this.state.Price.toFixed(2), \"$ \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(BurgerControls, {\n          removeIngredient: this.removeIngredientHandler,\n          addIngredient: this.addIngredientHandler,\n          disable: this.state.Message,\n          zeroIngredient: this.state.NoIngridient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(OrderNow, {\n          goCheckout: this.state.Purchasable,\n          checkoutNow: this.OrderNowHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/nseng/Desktop/MasterBurgerBuilder/Build-Burger-Online/src/Layout/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BurgerControls","Message","closeItem","classes","Summary","OrderNow","BackOrder","axios","ingredientPrices","salad","meat","bacon","cheese","BurgerBuilder","state","ingredients","MessageText","NoIngridient","cantRemove","Price","Purchasable","addIngredientHandler","igKey","ingredientsCopy","oldPrice","sumIngredients","setState","youCanCheckOut","newIngredsValues","Object","values","console","log","newIngredsLength","reduce","total","currentValue","removeIngredientHandler","ToggleMessage","OrderNowHandler","CloseBackOrder","sentOrder","order","price","customer","name","address","street","postalcode","country","email","deliveryMethod","post","showSummary","props","toFixed","render","BurgerContols","Icon","TotalPrice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Burger from './Burger/Burger';\r\nimport BurgerControls from './BurgerControls/BurgerControls';\r\nimport Message from './BurgerControls/Messages/Message';\r\nimport closeItem from '../Assets/images/icon.png'\r\nimport classes from './BurgerBuilder.module.css';\r\nimport Summary from '../Summary/Summary';\r\nimport OrderNow from './OrderNow/OrderNow';\r\nimport BackOrder from './BackOrder/BackOrder';\r\nimport axios from '../../axios-orders';\r\n\r\nconst ingredientPrices = {\r\n salad: 0.7,\r\n meat: 0.9,\r\n bacon: 1,\r\n cheese: 0.8\r\n}\r\nclass BurgerBuilder extends Component {\r\n state = {\r\n  ingredients: {\r\n   salad: 0,\r\n   meat: 0,\r\n   bacon: 0,\r\n   cheese: 0,\r\n  },\r\n  Message: false,\r\n  MessageText: \"\",\r\n  NoIngridient: true,\r\n  cantRemove: true,\r\n  Price: 4,\r\n  Purchasable: true,\r\n  OrderNow: false,\r\n }\r\n // ________functions___________\r\n addIngredientHandler = (igKey) => {\r\n  const ingredientsCopy = { ...this.state.ingredients };\r\n  if (ingredientsCopy[igKey] < 2) {\r\n   ingredientsCopy[igKey] += 1;\r\n   const oldPrice = this.state.Price;\r\n   const sumIngredients = oldPrice + ingredientPrices[igKey];\r\n   this.setState({ Price: sumIngredients, });\r\n   this.youCanCheckOut(ingredientsCopy);\r\n\r\n  } else {\r\n   this.setState(\r\n    {\r\n     Message: true,\r\n     MessageText: \"You Can Only Add 2 \" + igKey + \" Only \",\r\n\r\n    }\r\n   );\r\n  }\r\n  this.setState({ ingredients: ingredientsCopy });\r\n  const newIngredsValues = Object.values({ ...ingredientsCopy });\r\n  console.log(newIngredsValues);\r\n  const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n   return total + currentValue;\r\n  }, 0);\r\n  console.log(newIngredsLength);\r\n  if (newIngredsLength !== 0) {\r\n   this.setState({ NoIngridient: false });\r\n  }\r\n }\r\n\r\n // ____end________\r\n\r\n removeIngredientHandler = (igKey) => {\r\n  const ingredientsCopy = { ...this.state.ingredients };\r\n  if (ingredientsCopy[igKey] > 0) {\r\n   ingredientsCopy[igKey] -= 1;\r\n   const oldPrice = this.state.Price;\r\n   const sumIngredients = oldPrice - ingredientPrices[igKey];\r\n   this.setState({ Price: sumIngredients });\r\n   this.youCanCheckOut(ingredientsCopy);\r\n  } else {\r\n   this.setState(\r\n    {\r\n     Message: true,\r\n     MessageText: \"No  \" + igKey + \" To Remove \",\r\n    }\r\n   );\r\n  }\r\n\r\n  this.setState({ ingredients: ingredientsCopy });\r\n  const newIngredsValues = Object.values({ ...ingredientsCopy });\r\n  console.log(newIngredsValues);\r\n  const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n   return total + currentValue;\r\n  }, 0);\r\n  console.log(newIngredsLength);\r\n  if (newIngredsLength !== 0) {\r\n   this.setState({ NoIngridient: false });\r\n   console.log(this.state.NoIngridient)\r\n  } else {\r\n   this.setState({ NoIngridient: true, Purchasable: true });\r\n   console.log(this.state.Purchasable)\r\n  }\r\n }\r\n s\r\n // ____end________\r\n\r\n ToggleMessage = () => {\r\n  this.setState({ Message: false })\r\n }\r\n\r\n // ____end________\r\n\r\n // constructor(props) {\r\n //  super(props);\r\n //  this.NoIngridientChecker = this.NoIngridientChecker.bind(this);\r\n // }\r\n\r\n\r\n // NoIngridientChecker = () => {\r\n //  const newIngredsValues = Object.values({ ...this.state.ingredients });\r\n //  console.log(newIngredsValues);\r\n //  const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n //   return total + currentValue;\r\n //  }, 0);\r\n //  console.log(newIngredsLength);\r\n //  if (newIngredsLength === 0) {\r\n //   this.setState({ NoIngridient: false });\r\n //  }\r\n // }\r\n\r\n //_________end_________\r\n OrderNowHandler = () => {\r\n  this.setState({ OrderNow: true });\r\n  console.log(\"OrderNowHandler\" + this.state.OrderNow);\r\n }\r\n CloseBackOrder = () => {\r\n  this.setState({ OrderNow: false })\r\n }\r\n sentOrder = () => {\r\n  const order = {\r\n   ingredients: this.state.ingredients,\r\n   price: this.state.Price,\r\n   customer: {\r\n    name: 'bonheur jed',\r\n    address: {\r\n     street: 'Street1',\r\n     postalcode: 'H4L1P5',\r\n     country: 'Canada'\r\n    },\r\n    email: 'test@test.com'\r\n   },\r\n   deliveryMethod: 'Fastest'\r\n  }\r\n  axios.post('/orders.json', order);\r\n }\r\n\r\n // orderedlist = () => {\r\n //  const updatedList = Object.keys(this.state.ingredients)\r\n //   .map((Igreds) => {\r\n\r\n //   })\r\n\r\n // }\r\n showSummary = (props) => {\r\n  if (this.state.OrderNow) {\r\n   return (\r\n    <>\r\n     <Summary\r\n      listoforder={this.state.ingredients}\r\n      SummaryPrice={this.state.Price.toFixed(2)}\r\n      CancelOrder={this.CloseBackOrder}\r\n      sentOrder={this.sentOrder}\r\n     />\r\n     <BackOrder toclose={this.CloseBackOrder} />\r\n    </>\r\n   )\r\n  }\r\n }\r\n youCanCheckOut = (ingredients) => {\r\n  const newIngredsValues = Object.values(ingredients);\r\n  console.log(newIngredsValues);\r\n  const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n   return total + currentValue;\r\n  }, 0);\r\n  console.log(\"newIngredsLength\" + newIngredsLength)\r\n  if (newIngredsLength !== 0) {\r\n   this.setState({ Purchasable: false });\r\n  }\r\n }\r\n\r\n // PurchasableHandler = () => {\r\n //  const newIngredsValues = Object.values({ ...this.state.ingredients });\r\n //  console.log(newIngredsValues);\r\n //  const newIngredsLength = newIngredsValues.reduce((total, currentValue) => {\r\n //   return total + currentValue;\r\n //  }, 0);\r\n //  if (newIngredsLength === 0) {\r\n //   this.setState({ Purchasable: true });\r\n //  }\r\n // }\r\n\r\n\r\n // ________end_functions___________\r\n\r\n render() {\r\n  return (\r\n   <>\r\n    {this.showSummary()}\r\n    <Burger burgerIngredients={this.state.ingredients} />\r\n    <div className={classes.BurgerContols}>\r\n     <Message messageEmpty={this.state.Message}>\r\n      {this.state.MessageText}\r\n      <img onClick={this.ToggleMessage} className={classes.Icon} src={closeItem} alt=\"close\" />\r\n     </Message>\r\n     <div className={classes.TotalPrice}>Total: {(this.state.Price.toFixed(2))}$ </div>\r\n     <BurgerControls\r\n      removeIngredient={this.removeIngredientHandler}\r\n      addIngredient={this.addIngredientHandler}\r\n      disable={this.state.Message}\r\n      zeroIngredient={this.state.NoIngridient}\r\n     />\r\n     <OrderNow goCheckout={this.state.Purchasable} checkoutNow={this.OrderNowHandler} />\r\n\r\n    </div>\r\n   </>\r\n  )\r\n }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}