{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\nseng\\\\Desktop\\\\MasterBurgerBuilder\\\\Build-Burger-Online\\\\src\\\\Layout\\\\BurgerBuilder\\\\Burger\\\\Burger.js\";\nimport React from 'react';\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\nimport classes from './Burger.module.css';\n\nconst Burger = props => {\n  let transfromeingredient = Object.keys(props.burgerIngredients).map(ingredients => {\n    return [...Array(props.burgerIngredients[ingredients])].map((_, i) => {\n      return /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        type: ingredients\n      }, ingredients + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this);\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transfromeingredient.length === 0) {\n    transfromeingredient = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Start Adding Ingredients !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 28\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Burger,\n      children: [/*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        type: \"bread-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), transfromeingredient, /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n        type: \"bread-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Burger;\nexport default Burger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burger\");","map":{"version":3,"sources":["C:/Users/nseng/Desktop/MasterBurgerBuilder/Build-Burger-Online/src/Layout/BurgerBuilder/Burger/Burger.js"],"names":["React","BurgerIngredients","classes","Burger","props","transfromeingredient","Object","keys","burgerIngredients","map","ingredients","Array","_","i","reduce","arr","el","concat","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,MAAIC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,iBAAlB,EACxBC,GADwB,CACnBC,WAAD,IAAiB;AACpB,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,iBAAN,CAAwBE,WAAxB,CAAD,CAAT,EACJD,GADI,CACA,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACb,0BACE,QAAC,iBAAD;AAAyC,QAAA,IAAI,EAAEH;AAA/C,SAAwBA,WAAW,GAAGG,CAAtC;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KALI,CAAP;AAMD,GARwB,EAQtBC,MARsB,CAQf,CAACC,GAAD,EAAMC,EAAN,KAAa;AAErB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACD,GAXwB,EAWtB,EAXsB,CAA3B;;AAeA,MAAIX,oBAAoB,CAACa,MAArB,KAAgC,CAApC,EAAuC;AACrCb,IAAAA,oBAAoB,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB;AACD;;AACD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACC,MAAxB;AAAA,8BACE,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGE,oBAFH,eAGE,QAAC,iBAAD;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CA5BD;;KAAMF,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients';\r\nimport classes from './Burger.module.css';\r\nconst Burger = (props) => {\r\n  let transfromeingredient = Object.keys(props.burgerIngredients)\r\n    .map((ingredients) => {\r\n      return [...Array(props.burgerIngredients[ingredients])]\r\n        .map((_, i) => {\r\n          return (\r\n            <BurgerIngredients key={ingredients + i} type={ingredients} />\r\n          )\r\n        })\r\n    }).reduce((arr, el) => {\r\n\r\n      return arr.concat(el)\r\n    }, [])\r\n\r\n\r\n\r\n  if (transfromeingredient.length === 0) {\r\n    transfromeingredient = <p>Start Adding Ingredients !</p>\r\n  }\r\n  return (\r\n    <>\r\n      <div className={classes.Burger}>\r\n        <BurgerIngredients type=\"bread-top\" />\r\n        {transfromeingredient}\r\n        <BurgerIngredients type=\"bread-bottom\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Burger;"]},"metadata":{},"sourceType":"module"}